buildscript {
    ext {
        springBootVersion = '2.6.2'
        springCloudVersion = '2021.0.0'
        wrapperVersion = '1.0.21.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/publi' }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
//        jcenter {
//            url 'http://jcenter.bintray.com'
//        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE")
//        classpath("org.springframework.boot.experimental:spring-boot-thin-gradle-plugin:${wrapperVersion}")
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.aliyun.com/repository/publi' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
//    maven { url "https://repo.spring.io/snapshot" }
//    maven { url "https://repo.spring.io/milestone" }
}


subprojects {
    apply plugin: 'maven-publish'
//    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"
//    apply plugin: 'org.springframework.boot.experimental.thin-launcher'


    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

//    bootJar {
//        classifier = 'boot' // 后面带boot的为 fat jar
//        manifest {
//            attributes 'Marker': 'Boot' // manifest 添加标记
//        }
//    }
//
//    thinResolvePrepare {
//        into new File("${buildDir}/thin/deploy")
//    }
//
//    publishing {
//        publications {
//            mavenJava(MavenPublication) {
//                from components.java
//            }
//        }
//    }

    repositories {
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/publi' }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
//        maven { url "https://repo.spring.io/snapshot" }
//        maven { url "https://repo.spring.io/milestone" }
//        jcenter {
//            url 'http://jcenter.bintray.com'
//        }
    }


    configurations {
        // 所有需要忽略的包定义在此
        all*.exclude group: 'commons-httpclient'
        all*.exclude group: 'commons-logging'
        all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }

    dependencies {
        annotationProcessor 'org.projectlombok:lombok:1.18.2'
        compileOnly 'org.projectlombok:lombok:1.18.2'
        implementation group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '2.4.3'
//        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth'
//        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zipkin'
        implementation group: 'cn.hutool', name: 'hutool-all', version: '5.3.5'
        implementation group: 'joda-time', name: 'joda-time', version: '2.10.6'
        implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bus-amqp'
//        compileOnly group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.25'
        implementation('org.springframework.boot:spring-boot-starter-test')
    }

//    task thinProp{
//        new File("${buildDir}/libs/").mkdirs()
//        def file = new File("${buildDir}/libs/thin.properties")
//        file.text=''
//        configurations.runtime.dependencies.each { def version = it.version ? ":${it.version}" : ""; file << "dependencies.${it.name}=${it.group}:${it.name}${version}\n" }
//        configurations.compile.dependencies.each { def version = it.version ? ":${it.version}" : "";file << "dependencies.${it.name}=${it.group}:${it.name}${version}\n" }
//        println "文件内容：$file.text"
//    }
//
//    task createPom {
//        doLast {
//            pom {
//                withXml(dependencyManagement.pomConfigurer)
//            }.writeTo("build/resources/main/META-INF/maven/${project.group}/${project.name}/pom.xml")
//        }
//    }

    buildscript {
        repositories {
            mavenCentral()
            maven { url 'https://repo.spring.io/milestone' }
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            jcenter {
                url 'http://jcenter.bintray.com'
            }
        }
        dependencyManagement {
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }
        }
    }
//    jar.dependsOn = [thinProperties]
}
